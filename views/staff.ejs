<% 
    // Function to add ordinal suffix to the day
    const addOrdinalSuffix = (day) => {
    if (day >= 11 && day <= 13) {
        return day + 'th';
    } else {
        switch (day % 10) {
        case 1: return day + 'st';
        case 2: return day + 'nd';
        case 3: return day + 'rd';
        default: return day + 'th';
        }
    }
    };
%>

<%- include('./partials/header.ejs') %>

<body>
    <%- include('./partials/banner.ejs') %>
    <%- include('./partials/nav-staff.ejs') %>

    <form method="get" class="container flex mt-16 sort">
        <input type="text" name="search" class="w-96" placeholder="Search" value="<%= search || '' %>">
        <div class="ml-auto">
            <label>Sort by</label>
            <select name="filter" onchange="this.form.submit()">
                <option value="stock_desc" <%= filter == 'stock_desc' ? 'selected':'' %>>Stock descending</option>
                <option value="stock_asc" <%= filter == 'stock_asc' ? 'selected':'' %>>Stock ascending</option>
                <option value="name_desc" <%= filter == 'name_desc' ? 'selected':'' %>>Name descending</option>
                <option value="name_asc" <%= filter == 'name_asc' ? 'selected':'' %>>Name ascending</option>
            </select>
        </div>
    </form>

    <div class="products mt-4">
        <div class="product">
            <div>
                <h3 class="text-3xl font-semibold py-2">Upcoming Shifts</h3>
                <div class="overflow-y-auto max-h-[21rem]">
                    <% for (const i in shiftData){ %>
                        <% 
                            const startDateString = shiftData[i].Start_Time;
                            const startTime = new Date(startDateString).toLocaleTimeString([], { hour12:false })
    
                            const startDate = new Date(startDateString);
                            const dayOfMonth = addOrdinalSuffix(startDate.getDate());
                            const month = startDate.toLocaleString('en-UK', { month: 'long'} );
                            const dayOfWeek = startDate.toLocaleString('en-UK', { weekday: 'long'} );
                            const formattedDate = `${dayOfWeek}, ${dayOfMonth} ${month}`;
    
                            const endDateString = shiftData[i].End_Time;
                            const endTime = new Date(endDateString).toLocaleTimeString([], { hour12:false });
                        %>
                        <div class="py-1 border-t border-black shift">
                            <h4 class="text-xl font-medium"><%= formattedDate %></h4>
                            <p><%= startTime %> - <%= endTime %></p>
                        </div>
                    <% } %>
                </div>
            </div>
        </div>

        <div class="product">
            <div>
                <h3 class="text-3xl font-semibold py-2 border-b border-black">My Tasks</h3>
                <div class="overflow-y-auto max-h-72">
                    <ol class="my-4 text-left px-8 list-decimal">
                        <li>Restock shelves in aisle 3</li>
                        <li>Inventory check in warehouse</li>
                        <li>Assist customers in Electronics Department</li>
                    </ol>
                </div>
            </div>
        </div>

        <% for (const i in stockData){ %>
            <div class="product">
                <img src="<%= stockData[i].ImageLink %>" alt="Product image" class="w-full h-56 object-cover">
                <h4 class="font-medium text-lg mt-4"><%= stockData[i].Name %></h4>
                <p class="mt-2">Current Stock: <span class="font-medium <%= stockData[i].Count >= 20 ? 'text-green-500':'text-red-500' %>"><%= stockData[i].Count %></span> Units</p>
                <p class="mt-2">Restock Threshold: <span class="font-medium">20</span> Units</p>
                <button id="openModal" class="btn btn-primary mt-6 w-full !rounded-none restock-btn" data-stockID="<%= stockData[i].Stock_ID %>" data-currentQty="<%= stockData[i].Count %>">Restock</button>
            </div>
        <% } %>
    </div>

    <div class="container mt-16">
        <h2 class="text-3xl font-semibold text-center">Order History</h2>
        <div class="overflow-hidden mt-6">
            <table class="w-1/2 mx-auto table-fixed border border-gray-200">
                <thead class="">
                    <tr class="border-b">
                        <th class="p-2">Item</th>
                        <th class="p-2">Price</th>
                    </tr>
                </thead>
                <tbody>
                    <% for (const i in orderHistory){ %>
                        <tr>
                            <td class="border-b border-gray-200 text-center p-2"><%= orderHistory[i].StockName %></td>
                            <td class="border-b border-gray-200 text-center p-2">Â£<%= Number(orderHistory[i].CostPrice).toFixed(2) %></td>
                        </tr>
                    <% } %>
                </tbody>
            </table>
        </div>
    </div>

<%- include('./partials/footer.ejs') %>

<div id="modal" class="fixed h-screen w-screen bg-gray-800 inset-0 hidden justify-center items-center bg-opacity-50">
    <div class="bg-white w-1/3 p-8 rounded-md shadow-lg relative">
        <h1 class="text-2xl font-semibold mb-4 text-center">Restock Item</h1>
        
        <form method="post" action="/restock-item" class="sort">
            <label>Enter the number of items to be restocked</label>
            <input type="number" name="newQty" min="1" class="w-16">
            <button type="submit" name="restock_items" class="btn btn-primary w-full mt-4">RESTOCK</button>
            <input type="hidden" name="stockID" id="stockIDInput">
            <input type="hidden" name="currentQty" id="stockCurrentQty">
        </form>
        
        <button id="closeModal" class="text-4xl text-gray-800 absolute top-3 right-6">&times;</button>
    </div>
</div>

  <script>
    // JavaScript to handle modal functionality
    const openModalButtons = document.querySelectorAll('.restock-btn');
    const closeModalButton = document.getElementById('closeModal');
    const modal = document.getElementById('modal');
    const stockIDField = document.getElementById('stockIDInput')
    const stockCurrentQty = document.getElementById('stockCurrentQty')

    openModalButtons.forEach((button) => {
        button.addEventListener('click', (event) => {
            const stockID = event.currentTarget.dataset.stockid;
            stockIDInput.value = stockID;
            const stockQty = event.currentTarget.dataset.currentqty;
            stockCurrentQty.value = stockQty;
            modal.classList.remove('hidden');
            modal.classList.add('flex');
        });
    });

    closeModalButton.addEventListener('click', () => {
        modal.classList.add('hidden');
    });
  </script>